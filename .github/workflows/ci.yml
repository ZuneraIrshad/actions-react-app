name: CI 
on:
  pull_request: 
    branches: [develop, master]
  push: 
    branches: [develop, master]

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
      SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Cache node_modules
        uses: actions/cache@v2
        with: 
          path: ~/.npm #npm on linux cache is stored home/npm | https://github.com/actions/cache
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Use NodeJs
        uses: actions/setup-node@v1
        with: 
          node-version: "12.x"
      - run: npm ci #npm ci vs npm install
      - run: npm run format
      - run: npm test -- --coverage
        env: 
          CI: true
      - name: Upload Test Coverage
        uses: actions/upload-artifact@v2
        with: 
          name: code-coverage
          path: coverage 
      - name: Build Project
        if: github.event_name == 'push'
        run: npm run build
      - name: Upload Build Folder
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v2
        with: 
          name: build
          path: build
      - name: ZIP Assets
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          zip -r build.zip ./build
          zip -r coverage.zip ./coverage
      - name: Create a Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: npx semantic-release
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy to Staging
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        run: npx surge --project ./build --domian foregoing-mine.surge.sh
      - name: Deploy to Production
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: npx surge --project ./build --domian exotic-representative.surge.sh
      - name: Upload Coverage Reports
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: npx codecov
          env: 
            CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      

